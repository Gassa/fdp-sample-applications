# Default values for killrweather.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# data.zip location
data:
  datadirectory: http://s3-eu-west-1.amazonaws.com/fdp-killrweather-data/killrweather/data.zip
# docker images
image:
  app: lightbend/fdp-killrweather-app-k8s
  appstructured: lightbend/fdp-killrweather-structured-app-k8s
  loader: lightbend/fdp-killrweather-loader
  http: lightbend/fdp-killrweather-httpclient
  grpc: lightbend/fdp-killrweather-grpcclient
  pullPolicy: Always
  version: 1.2.0
# assembly jars and main classes
app:
  jar: fdp-killrweather-app-assembly
  main: com.lightbend.killrweather.app.KillrWeather
structured:
  jar: fdp-killrweather-structured-app-assembly
  main: com.lightbend.killrweather.app.structured.KillrWeatherStructured
# components to install
components:
  app: "killrweather"
  http: "no"
  grpc: "no"
# Configuration parameters for an application
configuration:
  checkpointing :
    pvc : "spark-checkpointing-pvc"
  streaming:
    batchInterval : "5 second"
    checkpointDir : "/usr/checkpoint/"
  kafka:
    brokerlist : broker.kafka.l4lb.thisdcos.directory:9092
  cassandra:
    hosts : "node-0-server.cassandra.autoip.dcos.thisdcos.directory, node-1-server.cassandra.autoip.dcos.thisdcos.directory, node-2-server.cassandra.autoip.dcos.thisdcos.directory"
  grafana :
    host : grafana.marathon.l4lb.thisdcos.directory
    port : 3000
  influx :
    host : http://influxdb.marathon.l4lb.thisdcos.directory
    port : 8086
  loader :
    publish_interval : 1 second
    data_mount : /usr/share
    batch_size : 10