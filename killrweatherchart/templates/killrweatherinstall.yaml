
{{ if eq .Values.components.app "killrweather" }}
apiVersion: v1
kind: Pod
metadata:
  name: killrweatherapp
spec:
  containers:
  - name: killrweatherapp
    image: {{ .Values.image.app}}:{{.Values.image.version }}
    command:
    - sh
    - -c
    - "/opt/spark/bin/spark-submit
        --master k8s://http://kube-apiserver-0-instance.kubernetes.mesos:9000
        --deploy-mode cluster
        --files http://api.hdfs.marathon.l4lb.thisdcos.directory/v1/endpoints/hdfs-site.xml,http://api.hdfs.marathon.l4lb.thisdcos.directory/v1/endpoints/core-site.xml
        --name killrweather --class {{ .Values.app.main }}
        --conf spark.executor.instances=3
        --conf spark.kubernetes.mountDependencies.filesDownloadDir=/etc/hadoop/conf
        --conf 'spark.driver.extraJavaOptions=-Dconfig.resource=cluster.conf'
        --conf 'spark.executor.extraJavaOptions=-Dconfig.resource=cluster.conf'
        --conf spark.kubernetes.container.image={{ .Values.image.app}}:{{.Values.image.version }}
        --conf spark.kubernetes.container.image.pullPolicy=Always
        local:///opt/spark/jars/{{ .Values.app.jar}}:{{.Values.image.version }}.jar"
  restartPolicy: Never

{{else}}

apiVersion: v1
kind: Pod
metadata:
  name: killrweatherappstructured
spec:
  containers:
  - name: killrweatherappstructured
    image: {{ .Values.image.appstructured}}:{{.Values.image.version }}
    command:
    - sh
    - -c
    - "/opt/spark/bin/spark-submit
        --master k8s://http://kube-apiserver-0-instance.kubernetes.mesos:9000
        --deploy-mode cluster
        --files http://api.hdfs.marathon.l4lb.thisdcos.directory/v1/endpoints/hdfs-site.xml,http://api.hdfs.marathon.l4lb.thisdcos.directory/v1/endpoints/core-site.xml
        --name killrweather --class {{ .Values.structured.main }}
        --conf spark.executor.instances=3
        --conf spark.kubernetes.mountDependencies.filesDownloadDir=/etc/hadoop/conf
        --conf 'spark.driver.extraJavaOptions=-Dconfig.resource=cluster.conf'
        --conf 'spark.executor.extraJavaOptions=-Dconfig.resource=cluster.conf'
        --conf spark.kubernetes.container.image={{ .Values.image.appstructured}}:{{.Values.image.version }}
        --conf spark.kubernetes.container.image.pullPolicy=Always
        local:///opt/spark/jars/{{ .Values.structured.jar}}:{{.Values.image.version }}.jar"
  restartPolicy: Never

{{end}}